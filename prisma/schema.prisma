generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Difficulty {
  A_1
  A_2
  B_1
  B_2
  C_1
  C_2
}

model User {
  id             Int        @id @default(autoincrement())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  email          String     @unique
  hashedPassword String
  name           String?
  userLessonProgresses UserLessonProgress[]
}

model Language {
  id                        Int      @id @default(autoincrement())
  name                      String   @unique
  lessonContentTranslations LessonContentTranslation[]
}

model Lesson {
  id                   Int      @id @default(autoincrement())
  name                 String   @unique
  description          String
  difficulty           Difficulty
  lessonContents       LessonContent[]
  userLessonProgresses UserLessonProgress[]
}

model LessonContent {
  id                        Int      @id @default(autoincrement())
  body                      String
  position                  Int
  lesson                    Lesson   @relation(fields: [lessonId], references: [id])
  lessonId                  Int
  lessonContentTranslations LessonContentTranslation[]
  @@unique([position, lessonId])
}

model LessonContentTranslation {
  language        Language         @relation(fields: [languageId], references: [id])
  languageId      Int
  lessonContent   LessonContent    @relation(fields: [lessonContentId], references: [id])
  lessonContentId Int
  @@id(name: "id", [languageId, lessonContentId])
}

model UserLessonProgress {
  lesson          Lesson     @relation(fields: [lessonId], references: [id])
  lessonId        Int
  user            User       @relation(fields: [userId], references: [id])
  userId          Int
  startedAt       DateTime   @default(now())
  completedAt     DateTime
  @@id(name: "id", [lessonId, userId])
}
